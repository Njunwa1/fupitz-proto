// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: url/url.proto

package url

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UrlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UrlType) Reset() {
	*x = UrlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlType) ProtoMessage() {}

func (x *UrlType) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlType.ProtoReflect.Descriptor instead.
func (*UrlType) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{0}
}

func (x *UrlType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebUrl      string `protobuf:"bytes,1,opt,name=webUrl,proto3" json:"webUrl,omitempty"`
	IosUrl      string `protobuf:"bytes,2,opt,name=iosUrl,proto3" json:"iosUrl,omitempty"`
	AndroidUrl  string `protobuf:"bytes,3,opt,name=androidUrl,proto3" json:"androidUrl,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	CustomAlias string `protobuf:"bytes,5,opt,name=customAlias,proto3" json:"customAlias,omitempty"`
	Password    string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	ExpiryAt    string `protobuf:"bytes,7,opt,name=expiryAt,proto3" json:"expiryAt,omitempty"`
	QrcodeUrl   string `protobuf:"bytes,8,opt,name=qrcodeUrl,proto3" json:"qrcodeUrl,omitempty"`
}

func (x *UrlRequest) Reset() {
	*x = UrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlRequest) ProtoMessage() {}

func (x *UrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlRequest.ProtoReflect.Descriptor instead.
func (*UrlRequest) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{1}
}

func (x *UrlRequest) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

func (x *UrlRequest) GetIosUrl() string {
	if x != nil {
		return x.IosUrl
	}
	return ""
}

func (x *UrlRequest) GetAndroidUrl() string {
	if x != nil {
		return x.AndroidUrl
	}
	return ""
}

func (x *UrlRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UrlRequest) GetCustomAlias() string {
	if x != nil {
		return x.CustomAlias
	}
	return ""
}

func (x *UrlRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UrlRequest) GetExpiryAt() string {
	if x != nil {
		return x.ExpiryAt
	}
	return ""
}

func (x *UrlRequest) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

type UrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Short       string `protobuf:"bytes,2,opt,name=short,proto3" json:"short,omitempty"`
	WebUrl      string `protobuf:"bytes,3,opt,name=webUrl,proto3" json:"webUrl,omitempty"`
	IosUrl      string `protobuf:"bytes,4,opt,name=iosUrl,proto3" json:"iosUrl,omitempty"`
	AndroidUrl  string `protobuf:"bytes,5,opt,name=androidUrl,proto3" json:"androidUrl,omitempty"`
	Type        string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	CustomAlias string `protobuf:"bytes,7,opt,name=customAlias,proto3" json:"customAlias,omitempty"`
	Password    string `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	ExpiryAt    string `protobuf:"bytes,9,opt,name=expiryAt,proto3" json:"expiryAt,omitempty"`
	QrcodeUrl   string `protobuf:"bytes,10,opt,name=qrcodeUrl,proto3" json:"qrcodeUrl,omitempty"`
}

func (x *UrlResponse) Reset() {
	*x = UrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlResponse) ProtoMessage() {}

func (x *UrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlResponse.ProtoReflect.Descriptor instead.
func (*UrlResponse) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{2}
}

func (x *UrlResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UrlResponse) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *UrlResponse) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

func (x *UrlResponse) GetIosUrl() string {
	if x != nil {
		return x.IosUrl
	}
	return ""
}

func (x *UrlResponse) GetAndroidUrl() string {
	if x != nil {
		return x.AndroidUrl
	}
	return ""
}

func (x *UrlResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UrlResponse) GetCustomAlias() string {
	if x != nil {
		return x.CustomAlias
	}
	return ""
}

func (x *UrlResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UrlResponse) GetExpiryAt() string {
	if x != nil {
		return x.ExpiryAt
	}
	return ""
}

func (x *UrlResponse) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

type UrlByKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortUrl string `protobuf:"bytes,1,opt,name=shortUrl,proto3" json:"shortUrl,omitempty"`
}

func (x *UrlByKeyRequest) Reset() {
	*x = UrlByKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlByKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlByKeyRequest) ProtoMessage() {}

func (x *UrlByKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlByKeyRequest.ProtoReflect.Descriptor instead.
func (*UrlByKeyRequest) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{3}
}

func (x *UrlByKeyRequest) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

type UserUrlsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserUrlsRequest) Reset() {
	*x = UserUrlsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUrlsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUrlsRequest) ProtoMessage() {}

func (x *UserUrlsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUrlsRequest.ProtoReflect.Descriptor instead.
func (*UserUrlsRequest) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{4}
}

func (x *UserUrlsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ShortUrl string `protobuf:"bytes,2,opt,name=shortUrl,proto3" json:"shortUrl,omitempty"`
}

func (x *UserUrlRequest) Reset() {
	*x = UserUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUrlRequest) ProtoMessage() {}

func (x *UserUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUrlRequest.ProtoReflect.Descriptor instead.
func (*UserUrlRequest) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{5}
}

func (x *UserUrlRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserUrlRequest) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

type UrlClick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UrlID     string `protobuf:"bytes,2,opt,name=urlID,proto3" json:"urlID,omitempty"`
	Ip        string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Country   string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	City      string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Device    string `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`
	Browser   string `protobuf:"bytes,7,opt,name=browser,proto3" json:"browser,omitempty"`
	Os        string `protobuf:"bytes,8,opt,name=os,proto3" json:"os,omitempty"`
	Referrer  string `protobuf:"bytes,9,opt,name=referrer,proto3" json:"referrer,omitempty"`
	CreatedAt string `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *UrlClick) Reset() {
	*x = UrlClick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlClick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlClick) ProtoMessage() {}

func (x *UrlClick) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlClick.ProtoReflect.Descriptor instead.
func (*UrlClick) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{6}
}

func (x *UrlClick) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UrlClick) GetUrlID() string {
	if x != nil {
		return x.UrlID
	}
	return ""
}

func (x *UrlClick) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UrlClick) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UrlClick) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UrlClick) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *UrlClick) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *UrlClick) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *UrlClick) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *UrlClick) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UrlClicksByBrowser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Browser     string `protobuf:"bytes,1,opt,name=browser,proto3" json:"browser,omitempty"`
	TotalClicks int64  `protobuf:"varint,2,opt,name=totalClicks,proto3" json:"totalClicks,omitempty"`
}

func (x *UrlClicksByBrowser) Reset() {
	*x = UrlClicksByBrowser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlClicksByBrowser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlClicksByBrowser) ProtoMessage() {}

func (x *UrlClicksByBrowser) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlClicksByBrowser.ProtoReflect.Descriptor instead.
func (*UrlClicksByBrowser) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{7}
}

func (x *UrlClicksByBrowser) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *UrlClicksByBrowser) GetTotalClicks() int64 {
	if x != nil {
		return x.TotalClicks
	}
	return 0
}

type UrlClicksByCountry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country     string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	TotalClicks int64  `protobuf:"varint,2,opt,name=totalClicks,proto3" json:"totalClicks,omitempty"`
}

func (x *UrlClicksByCountry) Reset() {
	*x = UrlClicksByCountry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlClicksByCountry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlClicksByCountry) ProtoMessage() {}

func (x *UrlClicksByCountry) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlClicksByCountry.ProtoReflect.Descriptor instead.
func (*UrlClicksByCountry) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{8}
}

func (x *UrlClicksByCountry) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UrlClicksByCountry) GetTotalClicks() int64 {
	if x != nil {
		return x.TotalClicks
	}
	return 0
}

type UrlClicksByDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device      string `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	TotalClicks int64  `protobuf:"varint,2,opt,name=totalClicks,proto3" json:"totalClicks,omitempty"`
}

func (x *UrlClicksByDevice) Reset() {
	*x = UrlClicksByDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlClicksByDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlClicksByDevice) ProtoMessage() {}

func (x *UrlClicksByDevice) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlClicksByDevice.ProtoReflect.Descriptor instead.
func (*UrlClicksByDevice) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{9}
}

func (x *UrlClicksByDevice) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *UrlClicksByDevice) GetTotalClicks() int64 {
	if x != nil {
		return x.TotalClicks
	}
	return 0
}

type UrlClicksByOS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Os          string `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	TotalClicks int64  `protobuf:"varint,2,opt,name=totalClicks,proto3" json:"totalClicks,omitempty"`
}

func (x *UrlClicksByOS) Reset() {
	*x = UrlClicksByOS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlClicksByOS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlClicksByOS) ProtoMessage() {}

func (x *UrlClicksByOS) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlClicksByOS.ProtoReflect.Descriptor instead.
func (*UrlClicksByOS) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{10}
}

func (x *UrlClicksByOS) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *UrlClicksByOS) GetTotalClicks() int64 {
	if x != nil {
		return x.TotalClicks
	}
	return 0
}

type UrlClicksByReferrer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Referrer    string `protobuf:"bytes,1,opt,name=referrer,proto3" json:"referrer,omitempty"`
	TotalClicks int64  `protobuf:"varint,2,opt,name=totalClicks,proto3" json:"totalClicks,omitempty"`
}

func (x *UrlClicksByReferrer) Reset() {
	*x = UrlClicksByReferrer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlClicksByReferrer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlClicksByReferrer) ProtoMessage() {}

func (x *UrlClicksByReferrer) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlClicksByReferrer.ProtoReflect.Descriptor instead.
func (*UrlClicksByReferrer) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{11}
}

func (x *UrlClicksByReferrer) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *UrlClicksByReferrer) GetTotalClicks() int64 {
	if x != nil {
		return x.TotalClicks
	}
	return 0
}

type AggregationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date               string                `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	TotalClicks        int64                 `protobuf:"varint,2,opt,name=totalClicks,proto3" json:"totalClicks,omitempty"`
	UrlClicksByOS      []*UrlClicksByOS      `protobuf:"bytes,3,rep,name=urlClicksByOS,proto3" json:"urlClicksByOS,omitempty"`
	UrlClicksByBrowser []*UrlClicksByBrowser `protobuf:"bytes,4,rep,name=urlClicksByBrowser,proto3" json:"urlClicksByBrowser,omitempty"`
	UrlClicksByDevice  []*UrlClicksByDevice  `protobuf:"bytes,5,rep,name=urlClicksByDevice,proto3" json:"urlClicksByDevice,omitempty"`
	UrlClicksByCountry []*UrlClicksByCountry `protobuf:"bytes,6,rep,name=urlClicksByCountry,proto3" json:"urlClicksByCountry,omitempty"`
}

func (x *AggregationResult) Reset() {
	*x = AggregationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationResult) ProtoMessage() {}

func (x *AggregationResult) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationResult.ProtoReflect.Descriptor instead.
func (*AggregationResult) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{12}
}

func (x *AggregationResult) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AggregationResult) GetTotalClicks() int64 {
	if x != nil {
		return x.TotalClicks
	}
	return 0
}

func (x *AggregationResult) GetUrlClicksByOS() []*UrlClicksByOS {
	if x != nil {
		return x.UrlClicksByOS
	}
	return nil
}

func (x *AggregationResult) GetUrlClicksByBrowser() []*UrlClicksByBrowser {
	if x != nil {
		return x.UrlClicksByBrowser
	}
	return nil
}

func (x *AggregationResult) GetUrlClicksByDevice() []*UrlClicksByDevice {
	if x != nil {
		return x.UrlClicksByDevice
	}
	return nil
}

func (x *AggregationResult) GetUrlClicksByCountry() []*UrlClicksByCountry {
	if x != nil {
		return x.UrlClicksByCountry
	}
	return nil
}

type UrlClicksAggregates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlResponse *UrlResponse         `protobuf:"bytes,1,opt,name=urlResponse,proto3" json:"urlResponse,omitempty"`
	Results     []*AggregationResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *UrlClicksAggregates) Reset() {
	*x = UrlClicksAggregates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlClicksAggregates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlClicksAggregates) ProtoMessage() {}

func (x *UrlClicksAggregates) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlClicksAggregates.ProtoReflect.Descriptor instead.
func (*UrlClicksAggregates) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{13}
}

func (x *UrlClicksAggregates) GetUrlResponse() *UrlResponse {
	if x != nil {
		return x.UrlResponse
	}
	return nil
}

func (x *UrlClicksAggregates) GetResults() []*AggregationResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type UserUrlsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls []*UrlResponse `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *UserUrlsResponse) Reset() {
	*x = UserUrlsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUrlsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUrlsResponse) ProtoMessage() {}

func (x *UserUrlsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUrlsResponse.ProtoReflect.Descriptor instead.
func (*UserUrlsResponse) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{14}
}

func (x *UserUrlsResponse) GetUrls() []*UrlResponse {
	if x != nil {
		return x.Urls
	}
	return nil
}

var File_url_url_proto protoreflect.FileDescriptor

var file_url_url_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x75, 0x72, 0x6c, 0x2f, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a,
	0x07, 0x55, 0x72, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe8, 0x01, 0x0a,
	0x0a, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x62, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62,
	0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6f, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6f, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x8f, 0x02, 0x0a, 0x0b, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x65, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6f, 0x73, 0x55, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6f, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x71,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x2d, 0x0a, 0x0f, 0x55, 0x72, 0x6c,
	0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x29, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x22, 0xea, 0x01, 0x0a, 0x08, 0x55, 0x72,
	0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x72, 0x6c, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x50, 0x0a, 0x12, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x73, 0x42, 0x79, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x55, 0x72, 0x6c, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x4d, 0x0a, 0x11, 0x55, 0x72,
	0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x41, 0x0a, 0x0d, 0x55, 0x72, 0x6c,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x4f, 0x53, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x53, 0x0a, 0x13,
	0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x73, 0x22, 0xcb, 0x02, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x34, 0x0a,
	0x0d, 0x75, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x4f, 0x53, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73,
	0x42, 0x79, 0x4f, 0x53, 0x52, 0x0d, 0x75, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42,
	0x79, 0x4f, 0x53, 0x12, 0x43, 0x0a, 0x12, 0x75, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73,
	0x42, 0x79, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x52, 0x12, 0x75, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42,
	0x79, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x11, 0x75, 0x72, 0x6c, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x11, 0x75, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x73, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x75, 0x72,
	0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x75, 0x72, 0x6c,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0x73, 0x0a, 0x13, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x75, 0x72, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x75, 0x72, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x22, 0x34, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x32, 0xb9, 0x02, 0x0a, 0x03, 0x55,
	0x72, 0x6c, 0x12, 0x4a, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x0b, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0c, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x72, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2f,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x2e,
	0x55, 0x72, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0c, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x73, 0x12, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x72, 0x6c, 0x73, 0x2f, 0x61, 0x6c, 0x6c,
	0x12, 0x64, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x55, 0x72, 0x6c, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x72, 0x6c, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x7d, 0x2f,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x6a, 0x75, 0x6e, 0x77, 0x61, 0x31, 0x2f, 0x66, 0x75, 0x70,
	0x69, 0x2e, 0x74, 0x7a, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x72, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_url_url_proto_rawDescOnce sync.Once
	file_url_url_proto_rawDescData = file_url_url_proto_rawDesc
)

func file_url_url_proto_rawDescGZIP() []byte {
	file_url_url_proto_rawDescOnce.Do(func() {
		file_url_url_proto_rawDescData = protoimpl.X.CompressGZIP(file_url_url_proto_rawDescData)
	})
	return file_url_url_proto_rawDescData
}

var file_url_url_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_url_url_proto_goTypes = []interface{}{
	(*UrlType)(nil),             // 0: UrlType
	(*UrlRequest)(nil),          // 1: UrlRequest
	(*UrlResponse)(nil),         // 2: UrlResponse
	(*UrlByKeyRequest)(nil),     // 3: UrlByKeyRequest
	(*UserUrlsRequest)(nil),     // 4: UserUrlsRequest
	(*UserUrlRequest)(nil),      // 5: UserUrlRequest
	(*UrlClick)(nil),            // 6: UrlClick
	(*UrlClicksByBrowser)(nil),  // 7: UrlClicksByBrowser
	(*UrlClicksByCountry)(nil),  // 8: UrlClicksByCountry
	(*UrlClicksByDevice)(nil),   // 9: UrlClicksByDevice
	(*UrlClicksByOS)(nil),       // 10: UrlClicksByOS
	(*UrlClicksByReferrer)(nil), // 11: UrlClicksByReferrer
	(*AggregationResult)(nil),   // 12: AggregationResult
	(*UrlClicksAggregates)(nil), // 13: UrlClicksAggregates
	(*UserUrlsResponse)(nil),    // 14: UserUrlsResponse
}
var file_url_url_proto_depIdxs = []int32{
	10, // 0: AggregationResult.urlClicksByOS:type_name -> UrlClicksByOS
	7,  // 1: AggregationResult.urlClicksByBrowser:type_name -> UrlClicksByBrowser
	9,  // 2: AggregationResult.urlClicksByDevice:type_name -> UrlClicksByDevice
	8,  // 3: AggregationResult.urlClicksByCountry:type_name -> UrlClicksByCountry
	2,  // 4: UrlClicksAggregates.urlResponse:type_name -> UrlResponse
	12, // 5: UrlClicksAggregates.results:type_name -> AggregationResult
	2,  // 6: UserUrlsResponse.urls:type_name -> UrlResponse
	1,  // 7: Url.CreateShortUrl:input_type -> UrlRequest
	3,  // 8: Url.GetUrlByKey:input_type -> UrlByKeyRequest
	4,  // 9: Url.GetAllUserUrls:input_type -> UserUrlsRequest
	5,  // 10: Url.GetUserUrlWithClicks:input_type -> UserUrlRequest
	2,  // 11: Url.CreateShortUrl:output_type -> UrlResponse
	2,  // 12: Url.GetUrlByKey:output_type -> UrlResponse
	14, // 13: Url.GetAllUserUrls:output_type -> UserUrlsResponse
	13, // 14: Url.GetUserUrlWithClicks:output_type -> UrlClicksAggregates
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_url_url_proto_init() }
func file_url_url_proto_init() {
	if File_url_url_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_url_url_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlByKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUrlsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlClick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlClicksByBrowser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlClicksByCountry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlClicksByDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlClicksByOS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlClicksByReferrer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlClicksAggregates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUrlsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_url_url_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_url_url_proto_goTypes,
		DependencyIndexes: file_url_url_proto_depIdxs,
		MessageInfos:      file_url_url_proto_msgTypes,
	}.Build()
	File_url_url_proto = out.File
	file_url_url_proto_rawDesc = nil
	file_url_url_proto_goTypes = nil
	file_url_url_proto_depIdxs = nil
}
