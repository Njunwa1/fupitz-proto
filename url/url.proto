syntax = "proto3";

option go_package = "github.com/Njunwa1/fupi.tz/shortener/proto/url";
import "google/api/annotations.proto";

message UrlType {
  string name = 1;
}

message UrlRequest {
  string webUrl = 1;
  string iosUrl = 2;
  string androidUrl = 3;
  string type = 4;
  string customAlias = 5;
  string password = 6;
  string expiryAt = 7;
  string qrcodeUrl = 8;
}

message UrlResponse {
  string id = 1;
  string short = 2;
  string webUrl = 3;
  string iosUrl = 4;
  string androidUrl = 5;
  string type = 6;
  string customAlias = 7;
  string password = 8;
  string expiryAt = 9;
  string qrcodeUrl = 10;
}

message UrlByKeyRequest {
  string shortUrl = 1;
}

message UserUrlsRequest {
  string userId = 1;
}

message UserUrlRequest {
  string userId = 1;
  string shortUrl = 2;
}

message UrlClick {
  string id = 1;
  string urlID = 2;
  string ip = 3;
  string country = 4;
  string city = 5;
  string device = 6;
  string browser = 7;
  string os = 8;
  string referrer = 9;
  string createdAt = 10;
}

message UrlClicksByBrowser {
  string browser = 1;
  int64 totalClicks = 2;
}

message UrlClicksByCountry {
  string country = 1;
  int64 totalClicks = 2;
}

message UrlClicksByDevice {
  string device = 1;
  int64 totalClicks = 2;

}

message UrlClicksByOS {
  string os = 1;
  int64 totalClicks = 2;
}


message UrlClicksByReferrer {
  string referrer = 1;
  int64 totalClicks = 2;
}

message AggregationResult {
  string date = 1;
  int64 totalClicks = 2;
  repeated UrlClicksByOS urlClicksByOS = 3;
  repeated UrlClicksByBrowser urlClicksByBrowser = 4;
  repeated UrlClicksByDevice urlClicksByDevice = 5;
  repeated UrlClicksByCountry urlClicksByCountry = 6;
}

message UrlClicksAggregates{
  UrlResponse urlResponse = 1;
  repeated AggregationResult results = 2;
}


message UserUrlsResponse {
  repeated UrlResponse urls = 1;
}


service Url {
  rpc CreateShortUrl(UrlRequest) returns (UrlResponse){
    option (google.api.http) = {
      post: "/api/v1/url/create"
      body: "*"
    };
  }

  rpc GetUrlByKey(UrlByKeyRequest) returns (UrlResponse){}

  rpc GetAllUserUrls(UserUrlsRequest) returns (UserUrlsResponse){
    option (google.api.http) = {
      get: "/api/v1/urls/all"
    };
  }

  rpc GetUserUrlWithClicks(UserUrlRequest) returns (UrlClicksAggregates){
       option (google.api.http) = {
         get: "/api/v1/url/{shortUrl}/clicks"
      };
    }
}

